{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/modules/components/form/FormSignUp.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport './FormSignUp.css';\nimport { Container, Row, Col } from \"reactstrap\";\nimport DatePicker from 'reactstrap-date-picker';\n\nconst FormSignUp = () => {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"username\",\n    class: \"vc_col-sm-12 wpb_column  mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default FormSignUp;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/modules/components/form/FormSignUp.js"],"names":["React","useForm","Container","Row","Col","DatePicker","FormSignUp","handleSubmit","register","errors","onSubmit","values","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCR,OAAO,EAAlD;;AACA,QAAMS,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAK,IAAA,EAAE,EAAC,UAAR;AAAmB,IAAA,KAAK,EAAC,+BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAG,IAAA,KAAK,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,EAEQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAA0D,IAAA,QAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAFA,CAFA,EA4EE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EF,CADF;AAgFD,CAtFD;;AAwFA,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport './FormSignUp.css';\nimport { Container, Row, Col } from \"reactstrap\";\nimport DatePicker from 'reactstrap-date-picker';\n\nconst FormSignUp = () => {\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n\n    <div>\n\n    <div id=\"username\" class=\"vc_col-sm-12 wpb_column  mt-1\"> \n\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"m-0\">Username</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"username\" placeholder=\"username\" required/>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</div>\n    </div>\n      \n      {/* <Container>\n        <Row>\n          <p>Username</p>\n          <input\n          name=\"username\"\n          ref={register({\n            required: 'Required',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n              message: \"invalid username\"\n            }\n          })}\n        />\n        {errors.username && errors.username.message}\n        </Row>\n        <Row>\n          <p>Email</p>\n          <input\n          name=\"email\"\n          ref={register({\n            required: 'Required',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n              message: \"invalid email\"\n            }\n          })}\n        />\n        {errors.username && errors.username.message}\n        </Row>\n        <Row>\n          <p class=\"m-0\">Gender</p>\n          <select\n            name=\"gender\"\n            ref={register({\n              required: 'Required',\n              validate: value => value == 'male' || value == 'female' \n            })\n\n            }>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n        {errors.email && errors.email.message}\n        </Row>\n        <Row>\n            <input\n            name=\"username\"\n            ref={register({\n              validate: value => value !== \"admin\" || \"Nice try!\"\n            })}\n          />\n          {errors.username && errors.username.message}\n        </Row>\n        <Row>\n          <Col xs=\"6\">\n            <DatePicker></DatePicker>\n\n          </Col>\n          <Col xs=\"6\"></Col>\n        </Row>\n      </Container> */}\n\n\n\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default FormSignUp;"]},"metadata":{},"sourceType":"module"}