{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyNavbar.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Media } from 'reactstrap';\nimport { ThemeSwitch } from './ThemeSwitch.js';\nimport { MyDropdown } from './MyDropdown.js';\nimport { MyButton } from './MyButton.js';\nimport logo from '../images/logo.png';\n\nconst MyNavbar = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const handleThemeChange = useCallback(new_theme => {\n    const current_theme = new_theme ? 'dark' : 'light';\n    setIsDark(new_theme);\n    setTheme(current_theme);\n    props.onChangeTheme(current_theme);\n  }, [setIsDark, setTheme]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    className: 'theme_' + theme,\n    bg: theme,\n    light: theme === 'light',\n    dark: theme === 'dark',\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Media, {\n    className: \"App-header-logo\",\n    src: logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    tag: \"button\",\n    type: \"button\",\n    className: \"my-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Home\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    tag: \"button\",\n    type: \"button\",\n    className: \"my-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Setting\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    tag: \"button\",\n    type: \"button\",\n    className: \"my-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Help\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(MyDropdown, {\n    theme: theme,\n    alignment: \"left\",\n    titleType: \"text\",\n    title: \"Sleep Test\",\n    items: [\"sleep score\", \"sleep form\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    tag: \"button\",\n    type: \"button\",\n    className: \"my-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Profile\"))), React.createElement(Nav, {\n    className: \"mr-auto-right\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ThemeSwitch, {\n    is_dark: isDark,\n    onChangeTheme: handleThemeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(MyDropdown, {\n    theme: theme,\n    alignment: \"right\",\n    titleType: \"fontawsome\",\n    title: \"fa fa-cog\",\n    items: [\"Language EN/TH\", \"Logout\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))));\n};\n\nexport default MyNavbar;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyNavbar.js"],"names":["React","useState","useCallback","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Media","ThemeSwitch","MyDropdown","MyButton","logo","MyNavbar","props","isOpen","setIsOpen","isDark","setIsDark","theme","setTheme","toggle","handleThemeChange","new_theme","current_theme","onChangeTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Media\n} from 'reactstrap';\nimport { ThemeSwitch } from './ThemeSwitch.js';\nimport { MyDropdown } from './MyDropdown.js';\nimport { MyButton } from './MyButton.js';\nimport logo from '../images/logo.png';\n\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const handleThemeChange = useCallback((new_theme) => {\n    const current_theme = new_theme ? 'dark' : 'light';\n    setIsDark(new_theme);\n    setTheme(current_theme);\n    props.onChangeTheme(current_theme);\n  },[setIsDark,setTheme]);\n\n  return (\n    <div>\n      <Navbar className={'theme_'+theme} bg={theme} light={theme === 'light'} dark={theme === 'dark'}  expand=\"md\">\n        <NavbarBrand href=\"/\">\n            <Media className=\"App-header-logo\"  src={logo}></Media>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <MyButton tag=\"button\" type=\"button\" className=\"my-button\">Home</MyButton>\n            </NavItem>\n            <NavItem>\n              <MyButton tag=\"button\" type=\"button\" className=\"my-button\">Setting</MyButton>\n            </NavItem>\n            <NavItem>\n              <MyButton tag=\"button\" type=\"button\" className=\"my-button\">Help</MyButton>\n            </NavItem>\n            <NavItem>\n              <MyDropdown theme={theme} alignment=\"left\" titleType=\"text\" title=\"Sleep Test\" items={[\"sleep score\",\"sleep form\"]}></MyDropdown>\n            </NavItem>\n            <NavItem>\n              <MyButton tag=\"button\" type=\"button\" className=\"my-button\">Profile</MyButton>\n            </NavItem>\n          </Nav>\n          <Nav className=\"mr-auto-right\" navbar>\n            <NavItem>\n              <ThemeSwitch is_dark={isDark} onChangeTheme={handleThemeChange}></ThemeSwitch>\n            </NavItem>\n            <NavItem>\n              <MyDropdown theme={theme} alignment=\"right\" titleType=\"fontawsome\" title=\"fa fa-cog\" items={[\"Language EN/TH\",\"Logout\"]}></MyDropdown>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default MyNavbar;"]},"metadata":{},"sourceType":"module"}