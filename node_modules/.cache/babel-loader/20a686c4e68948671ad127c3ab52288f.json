{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/components/ThemeSwitch.js\";\nimport React, { useState, useCallback } from 'react';\nimport '../css/ThemeSwitch.css';\n\nconst ThemeSwitch = props => {\n  const [isDark, setIsDark] = useState(props.isDark);\n\n  const handleChange = () => {\n    let new_theme = !isDark;\n    setIsDark(new_theme);\n    props.onChangeTheme(new_theme);\n  };\n\n  return React.createElement(\"button\", {\n    className: \"icon-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"checkbox\",\n    id: \"night-mode\",\n    value: isDark,\n    onChange: handleChange,\n    defaultChecked: isDark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"night-mode\",\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-sun-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-moon-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"blob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nexport default ThemeSwitch;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/ThemeSwitch.js"],"names":["React","useState","useCallback","ThemeSwitch","props","isDark","setIsDark","handleChange","new_theme","onChangeTheme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAO,wBAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE7B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAACG,KAAK,CAACC,MAAP,CAAnC;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAIC,SAAS,GAAG,CAACH,MAAjB;AACAC,IAAAA,SAAS,CAACE,SAAD,CAAT;AACAJ,IAAAA,KAAK,CAACK,aAAN,CAAoBD,SAApB;AACD,GAJD;;AAMA,SACE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,KAAK,EAAEH,MAJT;AAKE,IAAA,QAAQ,EAAEE,YALZ;AAME,IAAA,cAAc,EAAEF,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,OAAO,EAAC,YAAf;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CATF,CADF;AAiBD,CA3BD;;AA6BA,eAAeF,WAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport '../css/ThemeSwitch.css';\n\nconst ThemeSwitch = (props) => {\n\n  const [isDark,setIsDark] = useState(props.isDark);\n\n  const handleChange = () => {\n    let new_theme = !isDark;\n    setIsDark(new_theme);\n    props.onChangeTheme(new_theme)\n  };\n\n  return (\n    <button className=\"icon-button\">\n      <input\n        type=\"checkbox\"\n        className=\"checkbox\"\n        id=\"night-mode\"\n        value={isDark}\n        onChange={handleChange}\n        defaultChecked={isDark}\n        />\n      <label htmlFor=\"night-mode\" className=\"label\">\n        <i className=\"fa fa-sun-o\"></i>\n        <i className=\"fa fa-moon-o\"></i>\n        <div className=\"blob\"></div>\n      </label>\n    </button>\n  );\n}\n\nexport default ThemeSwitch;"]},"metadata":{},"sourceType":"module"}