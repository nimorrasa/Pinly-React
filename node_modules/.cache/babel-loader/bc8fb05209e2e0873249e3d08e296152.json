{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyNavbar.js\";\nimport React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText, Media } from 'reactstrap';\nimport { ThemeSwitch } from './ThemeSwitch.js';\nimport { MyDropdown } from './MyDropdown.js';\nimport logo from '../images/logo.png';\n\nconst MyNavbar = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [theme, setTheme] = useState(\"theme_light\");\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    function handleThemeChange(new_theme) {\n      const current_theme = new_theme ? 'theme_dark' : 'theme_light';\n      setIsDark(new_theme);\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  const handleThemeChange = new_theme => {\n    const current_theme = new_theme ? 'theme_dark' : 'theme_light';\n    this.setState({\n      is_dark: new_theme,\n      theme: current_theme\n    });\n    this.props.onChangeTheme(current_theme);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    color: \"light\",\n    light: true,\n    expand: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(NavbarBrand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Media, {\n    className: \"App-header-logo\",\n    src: logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(NavbarToggler, {\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Collapse, {\n    isOpen: isOpen,\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Home\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    href: \"/Setting/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Setting\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    href: \"/Help/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Help\")), React.createElement(MyDropdown, {\n    alignment: \"left\",\n    titleType: \"text\",\n    title: \"Sleep Test\",\n    items: [\"sleep score\", \"sleep form\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    href: \"/Profile/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Profile\"))), React.createElement(Nav, {\n    className: \"mr-auto-right\",\n    navbar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(ThemeSwitch, {\n    is_dark: is_dark,\n    onChangeTheme: handleThemeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(MyDropdown, {\n    alignment: \"right\",\n    titleType: \"fontawsome\",\n    title: \"fa fa-cog\",\n    items: [\"Language EN/TH\", \"Logout\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n};\n\nexport default MyNavbar;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyNavbar.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","Media","ThemeSwitch","MyDropdown","logo","MyNavbar","props","isOpen","setIsOpen","isDark","setIsDark","theme","setTheme","toggle","useEffect","handleThemeChange","new_theme","current_theme","ChatAPI","subscribeToFriendStatus","friend","id","handleStatusChange","unsubscribeFromFriendStatus","setState","is_dark","onChangeTheme"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Media\n} from 'reactstrap';\nimport { ThemeSwitch } from './ThemeSwitch.js';\nimport { MyDropdown } from './MyDropdown.js';\nimport logo from '../images/logo.png';\n\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n  const [theme, setTheme] = useState(\"theme_light\");\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    function handleThemeChange(new_theme) {\n        const current_theme = new_theme ? 'theme_dark' : 'theme_light';\n        setIsDark(new_theme);\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n\n  const handleThemeChange = (new_theme) => {\n        const current_theme = new_theme ? 'theme_dark' : 'theme_light';\n\n        this.setState({\n        is_dark: new_theme,\n        theme: current_theme\n        });\n        this.props.onChangeTheme(current_theme);  \n    }\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">\n            <Media className=\"App-header-logo\"  src={logo}></Media>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/Setting/\">Setting</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/Help/\">Help</NavLink>\n            </NavItem>\n            <MyDropdown alignment=\"left\" titleType=\"text\" title=\"Sleep Test\" items={[\"sleep score\",\"sleep form\"]}></MyDropdown>\n            <NavItem>\n              <NavLink href=\"/Profile/\">Profile</NavLink>\n            </NavItem>\n          </Nav>\n          <Nav className=\"mr-auto-right\" navbar>\n            <ThemeSwitch is_dark={is_dark} onChangeTheme={handleThemeChange}></ThemeSwitch>\n            <MyDropdown alignment=\"right\" titleType=\"fontawsome\" title=\"fa fa-cog\" items={[\"Language EN/TH\",\"Logout\"]}></MyDropdown>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default MyNavbar;"]},"metadata":{},"sourceType":"module"}