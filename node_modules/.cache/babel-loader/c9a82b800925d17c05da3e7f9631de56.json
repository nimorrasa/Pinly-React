{"ast":null,"code":"import _slicedToArray from\"/home/user23/docker2/pinly-react-project/Pinly-React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import{Dropdown,DropdownToggle,DropdownMenu,DropdownItem}from'reactstrap';import'../css/MyButton.css';var MyDropdown=function MyDropdown(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropdownOpen=_useState2[0],setDropdownOpen=_useState2[1];var toggle=function toggle(){return setDropdownOpen(!dropdownOpen);};var onMouseEnter=useCallback(function(){setDropdownOpen(true);},[setDropdownOpen]);var onMouseLeave=useCallback(function(){setDropdownOpen(false);},[setDropdownOpen]);return React.createElement(Dropdown,{className:props.theme,onMouseOver:onMouseEnter,onMouseLeave:onMouseLeave,isOpen:dropdownOpen,toggle:toggle},React.createElement(DropdownToggle,{tag:\"button\",type:\"button\",className:\"my-button\"},props.titleType==='text'?props.title:React.createElement(\"i\",{className:props.title})),React.createElement(DropdownMenu,{right:props.alignment==='right'},props.items.map(function(item,key){return React.createElement(DropdownItem,{key:key},React.createElement(\"a\",null,item));})));};export default MyDropdown;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyDropdown.js"],"names":["React","useState","useCallback","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","MyDropdown","props","dropdownOpen","setDropdownOpen","toggle","onMouseEnter","onMouseLeave","theme","titleType","title","alignment","items","map","item","key"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,QAAT,CAAmBC,cAAnB,CAAmCC,YAAnC,CAAiDC,YAAjD,KAAqE,YAArE,CACA,MAAO,qBAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,eACWP,QAAQ,CAAC,KAAD,CADnB,wCACrBQ,YADqB,eACRC,eADQ,eAG1B,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMD,CAAAA,eAAe,CAAC,CAACD,YAAF,CAArB,EAAf,CAEA,GAAMG,CAAAA,YAAY,CAAGV,WAAW,CAAC,UAAM,CACrCQ,eAAe,CAAC,IAAD,CAAf,CACD,CAF+B,CAE9B,CAACA,eAAD,CAF8B,CAAhC,CAIA,GAAMG,CAAAA,YAAY,CAAGX,WAAW,CAAC,UAAM,CACrCQ,eAAe,CAAC,KAAD,CAAf,CACD,CAF+B,CAE9B,CAACA,eAAD,CAF8B,CAAhC,CAIA,MACE,qBAAC,QAAD,EAAU,SAAS,CAAEF,KAAK,CAACM,KAA3B,CAAkC,WAAW,CAAEF,YAA/C,CAA6D,YAAY,CAAEC,YAA3E,CAAyF,MAAM,CAAEJ,YAAjG,CAA+G,MAAM,CAAEE,MAAvH,EACE,oBAAC,cAAD,EAAgB,GAAG,CAAC,QAApB,CAA6B,IAAI,CAAC,QAAlC,CAA2C,SAAS,CAAC,WAArD,EACGH,KAAK,CAACO,SAAN,GAAoB,MAApB,CAA6BP,KAAK,CAACQ,KAAnC,CAA2C,yBAAG,SAAS,CAAER,KAAK,CAACQ,KAApB,EAD9C,CADF,CAIE,oBAAC,YAAD,EAAe,KAAK,CAAER,KAAK,CAACS,SAAN,GAAoB,OAA1C,EACGT,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,CAAMC,GAAN,QAAc,qBAAC,YAAD,EAAc,GAAG,CAAEA,GAAnB,EAAwB,6BAAID,IAAJ,CAAxB,CAAd,EAAhB,CADH,CAJF,CADF,CAUD,CAvBH,CAyBE,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport '../css/MyButton.css';\n\nconst MyDropdown = (props) => {\n  const [dropdownOpen,setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(!dropdownOpen);\n\n    const onMouseEnter = useCallback(() => {\n      setDropdownOpen(true);\n    },[setDropdownOpen]);\n  \n    const onMouseLeave = useCallback(() => {\n      setDropdownOpen(false);\n    },[setDropdownOpen]);\n\n    return (\n      <Dropdown className={props.theme} onMouseOver={onMouseEnter} onMouseLeave={onMouseLeave} isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle tag=\"button\" type=\"button\" className=\"my-button\">\n          {props.titleType === 'text' ? props.title : <i className={props.title}></i>}\n        </DropdownToggle>\n        <DropdownMenu  right={props.alignment === 'right'}>\n          {props.items.map((item,key) => <DropdownItem key={key}><a>{item}</a></DropdownItem>)}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n\n  export default MyDropdown;"]},"metadata":{},"sourceType":"module"}