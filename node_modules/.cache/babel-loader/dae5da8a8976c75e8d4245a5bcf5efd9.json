{"ast":null,"code":"import _slicedToArray from\"/home/user23/docker2/pinly-react-project/Pinly-React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import{Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,Media}from'reactstrap';import ThemeSwitch from'./ThemeSwitch.js';import MyDropdown from'./MyDropdown.js';import MySetting from'./MySetting.js';import MyButton from'./MyButton.js';import logo from'../images/logo.png';var MyNavbar=function MyNavbar(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(props.theme==='dark'),_useState4=_slicedToArray(_useState3,2),isDark=_useState4[0],setIsDark=_useState4[1];var _useState5=useState(props.theme),_useState6=_slicedToArray(_useState5,2),theme=_useState6[0],setTheme=_useState6[1];var toggle=function toggle(){return setIsOpen(!isOpen);};var handleThemeChange=useCallback(function(new_theme){var current_theme=new_theme?'dark':'light';setIsDark(new_theme);setTheme(current_theme);props.onChangeTheme(current_theme);},[setIsDark,setTheme]);return React.createElement(\"div\",null,React.createElement(Navbar,{className:'theme_'+theme,bg:theme,light:theme==='light',dark:theme==='dark',expand:\"md\"},React.createElement(NavbarBrand,{href:\"/\"},React.createElement(Media,{className:\"App-header-logo\",src:logo})),React.createElement(NavbarToggler,{onClick:toggle}),React.createElement(Collapse,{isOpen:isOpen,navbar:true},React.createElement(Nav,{className:\"mr-auto\",navbar:true},React.createElement(NavItem,null,React.createElement(MyButton,{type:\"text\",title:\"Home\"})),React.createElement(NavItem,null,React.createElement(MyButton,{type:\"text\",title:\"Profile\"})),React.createElement(NavItem,null,React.createElement(MyDropdown,{theme:theme,alignment:\"left\",titleType:\"text\",title:\"Sleep Test\",items:[\"sleep score\",\"sleep form\"]})),React.createElement(NavItem,null,React.createElement(MyButton,{type:\"text\",title:\"Setting\"})),React.createElement(NavItem,null,React.createElement(MyButton,{type:\"icon\",title:\"fa fa-question-circle\"}))),React.createElement(Nav,{className:\"mr-auto-right\",navbar:true},React.createElement(NavItem,null,React.createElement(ThemeSwitch,{isDark:isDark,onChangeTheme:handleThemeChange})),React.createElement(NavItem,null,React.createElement(MySetting,{theme:theme}))))));};export default MyNavbar;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/MyNavbar.js"],"names":["React","useState","useCallback","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Media","ThemeSwitch","MyDropdown","MySetting","MyButton","logo","MyNavbar","props","isOpen","setIsOpen","theme","isDark","setIsDark","setTheme","toggle","handleThemeChange","new_theme","current_theme","onChangeTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Media\n} from 'reactstrap';\nimport ThemeSwitch from './ThemeSwitch.js';\nimport MyDropdown from './MyDropdown.js';\nimport MySetting from './MySetting.js';\nimport MyButton from './MyButton.js';\nimport logo from '../images/logo.png';\n\n\nconst MyNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDark, setIsDark] = useState((props.theme === 'dark'));\n  const [theme, setTheme] = useState(props.theme);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const handleThemeChange = useCallback((new_theme) => {\n    const current_theme = new_theme ? 'dark' : 'light';\n    setIsDark(new_theme);\n    setTheme(current_theme);\n    props.onChangeTheme(current_theme);\n  },[setIsDark,setTheme]);\n\n  return (\n    <div>\n      <Navbar className={'theme_'+theme} bg={theme} light={theme === 'light'} dark={theme === 'dark'}  expand=\"md\">\n        <NavbarBrand href=\"/\">\n            <Media className=\"App-header-logo\"  src={logo}></Media>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <MyButton type=\"text\" title=\"Home\"></MyButton>\n            </NavItem>\n            <NavItem>\n              <MyButton type=\"text\" title=\"Profile\"></MyButton>\n            </NavItem>\n            <NavItem>\n              <MyDropdown theme={theme} alignment=\"left\" titleType=\"text\" title=\"Sleep Test\" items={[\"sleep score\",\"sleep form\"]}></MyDropdown>\n            </NavItem>\n            <NavItem>\n              <MyButton type=\"text\" title=\"Setting\"></MyButton>\n            </NavItem>\n            <NavItem>\n              <MyButton type=\"icon\" title=\"fa fa-question-circle\"></MyButton>\n            </NavItem>\n          </Nav>\n          <Nav className=\"mr-auto-right\" navbar>\n            <NavItem>\n              <ThemeSwitch isDark={isDark} onChangeTheme={handleThemeChange}></ThemeSwitch>\n            </NavItem>\n            <NavItem>\n              <MySetting theme={theme}></MySetting>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default MyNavbar;"]},"metadata":{},"sourceType":"module"}