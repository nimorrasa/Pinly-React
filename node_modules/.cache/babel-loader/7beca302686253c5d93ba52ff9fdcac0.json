{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/components/SettingButton.js\";\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nexport class SettingButton extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     value: null,\n  //   };\n  // }\n  render() {\n    const CustomToggle = React.forwardRef(({\n      children,\n      onClick\n    }, ref) => React.createElement(\"a\", {\n      href: \"\",\n      ref: ref,\n      onClick: e => {\n        e.preventDefault();\n        onClick(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, children, \"\\u25BC\")); // forwardRef again here!\n    // Dropdown needs access to the DOM of the Menu to measure it\n\n    const CustomMenu = React.forwardRef(({\n      children,\n      style,\n      className,\n      'aria-labelledby': labeledBy\n    }, ref) => {\n      const [value, setValue] = useState('');\n      return React.createElement(\"div\", {\n        ref: ref,\n        style: style,\n        className: className,\n        \"aria-labelledby\": labeledBy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        autoFocus: true,\n        className: \"mx-3 my-2 w-auto\",\n        placeholder: \"Type to filter...\",\n        onChange: e => setValue(e.target.value),\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))));\n    });\n    return React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      as: CustomToggle,\n      id: \"dropdown-custom-components\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Custom toggle\"), React.createElement(Dropdown.Menu, {\n      as: CustomMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Red\"), React.createElement(Dropdown.Item, {\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Blue\"), React.createElement(Dropdown.Item, {\n      eventKey: \"3\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Orange\"), React.createElement(Dropdown.Item, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Red-Orange\")));\n  }\n\n}","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/components/SettingButton.js"],"names":["React","Dropdown","SettingButton","Component","render","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","CustomMenu","style","className","labeledBy","value","setValue","useState","target","Children","toArray","filter","child","props","toLowerCase","startsWith"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAO,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC/C;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAGL,KAAK,CAACM,UAAN,CAAiB,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,EAAwBC,GAAxB,KACpC;AACE,MAAA,IAAI,EAAC,EADP;AAEE,MAAA,GAAG,EAAEA,GAFP;AAGE,MAAA,OAAO,EAAEC,CAAC,IAAI;AACZA,QAAAA,CAAC,CAACC,cAAF;AACAH,QAAAA,OAAO,CAACE,CAAD,CAAP;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGH,QARH,WADmB,CAArB,CADO,CAeP;AACA;;AACA,UAAMK,UAAU,GAAGZ,KAAK,CAACM,UAAN,CACjB,CAAC;AAAEC,MAAAA,QAAF;AAAYM,MAAAA,KAAZ;AAAmBC,MAAAA,SAAnB;AAA8B,yBAAmBC;AAAjD,KAAD,EAA+DN,GAA/D,KAAuE;AACrE,YAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AAEA,aACE;AACE,QAAA,GAAG,EAAET,GADP;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,2BAAiBC,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,QAAQ,EAAEL,CAAC,IAAIO,QAAQ,CAACP,CAAC,CAACS,MAAF,CAASH,KAAV,CAJzB;AAKE,QAAA,KAAK,EAAEA,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAaE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBd,QAAvB,EAAiCe,MAAjC,CACCC,KAAK,IACH,CAACP,KAAD,IAAUO,KAAK,CAACC,KAAN,CAAYjB,QAAZ,CAAqBkB,WAArB,GAAmCC,UAAnC,CAA8CV,KAA9C,CAFb,CADH,CAbF,CADF;AAsBD,KA1BgB,CAAnB;AA6BA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,EAAE,EAAEX,YAArB;AAAmC,MAAA,EAAE,EAAC,4BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAKA,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAEO,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAA4B,MAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAME,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,QAAQ,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CALA,CADF;AAgBD;;AAtE8C","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\n\nexport class SettingButton extends React.Component {\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     value: null,\n    //   };\n    // }\n  \n    render() {\n      const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <a\n          href=\"\"\n          ref={ref}\n          onClick={e => {\n            e.preventDefault();\n            onClick(e);\n          }}\n        >\n          {children}\n          &#x25bc;\n        </a>\n      ));\n      \n      // forwardRef again here!\n      // Dropdown needs access to the DOM of the Menu to measure it\n      const CustomMenu = React.forwardRef(\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n          const [value, setValue] = useState('');\n      \n          return (\n            <div\n              ref={ref}\n              style={style}\n              className={className}\n              aria-labelledby={labeledBy}\n            >\n              <FormControl\n                autoFocus\n                className=\"mx-3 my-2 w-auto\"\n                placeholder=\"Type to filter...\"\n                onChange={e => setValue(e.target.value)}\n                value={value}\n              />\n              <ul className=\"list-unstyled\">\n                {React.Children.toArray(children).filter(\n                  child =>\n                    !value || child.props.children.toLowerCase().startsWith(value),\n                )}\n              </ul>\n            </div>\n          );\n        },\n      );\n       \n      return (\n        <Dropdown>\n        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n          Custom toggle\n        </Dropdown.Toggle>\n    \n        <Dropdown.Menu as={CustomMenu}>\n          <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n          <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n          <Dropdown.Item eventKey=\"3\" active>\n            Orange\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      );\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}