{"ast":null,"code":"var _jsxFileName = \"/home/user23/docker2/pinly-react-project/Pinly-React/src/modules/components/setting/MySetting.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './MySetting.css';\n\nconst MySetting = props => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(!dropdownOpen);\n\n  const onMouseEnter = useCallback(() => {\n    setDropdownOpen(true);\n  }, [setDropdownOpen]);\n  const onMouseLeave = useCallback(() => {\n    setDropdownOpen(false);\n  }, [setDropdownOpen]);\n  return React.createElement(Dropdown, {\n    className: props.theme,\n    onMouseOver: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    tag: \"button\",\n    type: \"button\",\n    className: \"my-button my-setting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-cog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    className: \"my-language\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Language \", React.createElement(Link, {\n    to: '/?th',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"TH\"), \"/\", React.createElement(Link, {\n    to: '/' + item.toLowerCase().replace(' ', '_'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"EN\")), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Voice Over\")), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Logout\"))));\n};\n\nexport default MySetting;","map":{"version":3,"sources":["/home/user23/docker2/pinly-react-project/Pinly-React/src/modules/components/setting/MySetting.js"],"names":["React","useState","useCallback","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","MySetting","props","dropdownOpen","setDropdownOpen","toggle","onMouseEnter","onMouseLeave","theme","item","toLowerCase","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,YAArE;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,KAAD,CAA/C;;AAEE,QAAMU,MAAM,GAAG,MAAMD,eAAe,CAAC,CAACD,YAAF,CAApC;;AAEA,QAAMG,YAAY,GAAGV,WAAW,CAAC,MAAM;AACrCQ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAF+B,EAE9B,CAACA,eAAD,CAF8B,CAAhC;AAIA,QAAMG,YAAY,GAAGX,WAAW,CAAC,MAAM;AACrCQ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAF+B,EAE9B,CAACA,eAAD,CAF8B,CAAhC;AAKA,SACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEF,KAAK,CAACM,KAA3B;AAAkC,IAAA,WAAW,EAAEF,YAA/C;AAA6D,IAAA,YAAY,EAAEC,YAA3E;AAAyF,IAAA,MAAM,EAAEJ,YAAjG;AAA+G,IAAA,MAAM,EAAEE,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAC,QAApB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAA2C,IAAA,SAAS,EAAC,sBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,YAAD;AAAe,IAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/C,OAA2E,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,MAAII,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2B,GAA3B,EAA+B,GAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3E,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd,CAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd,CAHF,CAJF,CADF;AAYD,CA1BH;;AA4BE,eAAeV,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './MySetting.css';\n\nconst MySetting = (props) => {\n  const [dropdownOpen,setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(!dropdownOpen);\n\n    const onMouseEnter = useCallback(() => {\n      setDropdownOpen(true);\n    },[setDropdownOpen]);\n  \n    const onMouseLeave = useCallback(() => {\n      setDropdownOpen(false);\n    },[setDropdownOpen]);\n\n\n    return (\n      <Dropdown className={props.theme} onMouseOver={onMouseEnter} onMouseLeave={onMouseLeave} isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle tag=\"button\" type=\"button\" className=\"my-button my-setting\">\n          <i className=\"fa fa-cog\"></i>\n        </DropdownToggle>\n        <DropdownMenu  right>\n          <DropdownItem className='my-language'>Language <Link to={'/?th'}>TH</Link>/<Link to={'/'+item.toLowerCase().replace(' ','_')}>EN</Link></DropdownItem>\n          <DropdownItem><a>Voice Over</a></DropdownItem>\n          <DropdownItem><a>Logout</a></DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n\n  export default MySetting;"]},"metadata":{},"sourceType":"module"}